"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const Fleet_controller_1 = require("../controllers/Fleet.controller");
const HistroryMaintainance_controller_1 = require("../controllers/HistroryMaintainance.controller");
const logins_controller_1 = require("../controllers/logins.controller");
const maintain_controller_1 = require("../controllers/maintain.controller");
const Monitor_controller_1 = require("../controllers/Monitor.controller");
const schedule_controller_1 = require("../controllers/schedule.controller");
const tech_controller_1 = require("../controllers/tech.controller");
const ticket_controller_1 = require("../controllers/ticket.controller");
const HomeReport_function_1 = require("../functions/HomeReport.function");
const report_functions_1 = require("../functions/report.functions");
const ticket_function_1 = require("../functions/ticket.function");
const videoFootage_controller_1 = require("../controllers/videoFootage.controller");
const VideoFootageHistory_controller_1 = require("../controllers/VideoFootageHistory.controller");
const Monitors_controller_1 = require("../controllers/Monitors.controller");
const router = (0, express_1.Router)();
//Fleet Routes
router.post('/fleet/post', Fleet_controller_1.FleetController.create);
router.get('/fleet/fetchall/:depot', Fleet_controller_1.FleetController.reveal);
router.get('/fleet/fetchone/:fleetNo', Fleet_controller_1.FleetController.revealOne);
router.put('/fleet/update/:fleetNo', Fleet_controller_1.FleetController.alter);
router.delete('/fleet/delete/:fleetNo', Fleet_controller_1.FleetController.remove);
router.get('/fleet/fetchallMaintainance', Fleet_controller_1.FleetController.revealWithMaintainance);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Monitoring Routes
router.post('/monitoring/post', Monitor_controller_1.MonitoringController.create);
router.get('/monitoring/fetchall', Monitor_controller_1.MonitoringController.reveal);
router.get('/monitoring/fetchone/:fleetNumber', Monitor_controller_1.MonitoringController.revealOne);
router.put('/monitoring/update/:fleetNumber', Monitor_controller_1.MonitoringController.alter);
router.delete('/monitoring/delete/:fleetNumber', Monitor_controller_1.MonitoringController.remove);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Login Routes/////////////////////////////////////////////////////
router.post('/user/post', logins_controller_1.LoginController.create);
router.get('/user/fetchall', logins_controller_1.LoginController.reveal);
router.get('/user/fetchone', logins_controller_1.LoginController.revealOne);
router.put('/user/update', logins_controller_1.LoginController.alter);
router.delete('/user/delete', logins_controller_1.LoginController.remove);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Maintainance Route/////////////////////////////////////////////////////
// router.post('/maintainance/post', MonitoringController.create);
router.get('/maintainance/fetchall', maintain_controller_1.MaintainController.reveal);
router.get('/maintainance/fetchone/:fleetNumber', maintain_controller_1.MaintainController.revealOne);
router.put('/maintainance/update/:fleetNumber', maintain_controller_1.MaintainController.alter);
router.delete('/maintainance/delete/:fleetNumber', maintain_controller_1.MaintainController.remove);
router.get('/maintainance/fetchallFleet/:depot', maintain_controller_1.MaintainController.revealWithFleet);
router.get('/maintainance/fetchoneFleet/:fleetNumber', maintain_controller_1.MaintainController.revealOneFleet);
router.get('/maintainance/fetchone-scheduledFleet/:fleetNumber', maintain_controller_1.MaintainController.OneFleetAndSchedule);
router.get('/maintainance/fetchAll-scheduledFleet', maintain_controller_1.MaintainController.AllScheduledFleet);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Technician Routes/////////////////////////////////////////////////////
router.post('/technician-data/post', tech_controller_1.TechController.createTech);
router.get('/technician-data/fetchall', tech_controller_1.TechController.reveal);
router.get('/technician-data/fetchone/:ticket', tech_controller_1.TechController.revealOne);
router.get('/technician-maintainance/fetchall', tech_controller_1.TechController.allTechsWithMaintainance);
router.get('/filteredtechnician-maintainance/fetchone/:ticket', tech_controller_1.TechController.filteredTechsWithMaintainance);
router.post('/technician-Video-data/post', tech_controller_1.TechController.createTechOnVideo);
// router.put('/technician-data/update/:id', TechController.alter);
// router.delete('/technician-data/delete/:id', TechController.remove);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Schedule Routes/////////////////////////////////////////////////////
router.get('/schedule/fetchallSchedules', schedule_controller_1.ScheduleController.revealAllSchedules);
router.post('/schedule/post', schedule_controller_1.ScheduleController.create);
router.delete('/schedule/delete/:ticket', schedule_controller_1.ScheduleController.remove);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Maintainance History Routes///////////////////////////////////////////
router.post('/maintainanceHistory/post', HistroryMaintainance_controller_1.HistrotMaintainController.create);
router.get('/maintainanceHistory/fetchone/:ticket', HistroryMaintainance_controller_1.HistrotMaintainController.revealOne);
// router.put('/maintainanceHistory/update/:fleetNumber', MaintainController.alter);
// router.delete('/maintainance/delete/:fleetNumber', MaintainController.remove);
router.get('/maintainanceHistory/fetchallFleet', HistroryMaintainance_controller_1.HistrotMaintainController.allHistMaintainance);
router.get('/maintainanceHistory/fetchoneFleet/:ticket', HistroryMaintainance_controller_1.HistrotMaintainController.filteredHistMaintainance);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
router.post('/VideofootageHistory/post', VideoFootageHistory_controller_1.VideoFootageHistoryController.create);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Function Router/////////////////////////////////////////////////////
router.get('/maintainance/count', ticket_function_1.UniqueTicketNumber.ticket);
router.get('/videofootage/ticket', ticket_function_1.UniqueTicketNumber.ticketVideo);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Ticket Routes/////////////////////////////////////////////////////
router.post('/ticket/post', ticket_controller_1.TicketController.create);
router.post('/videoTicket/post', ticket_controller_1.TicketController.createVTicket);
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
router.get('/reporting', report_functions_1.ReportFuntions.TotalMaintainanceBy('status'));
router.get('/reporting/:status', report_functions_1.ReportFuntions.TotalMaintainanceByStatus);
router.get('/DepotCout', HomeReport_function_1.HomeReport.TotalMaintainanceByPriory);
////////////////////////////////////////////Video Footage///////////////////////////////////////////////////////
router.post('/video-footage/post', videoFootage_controller_1.VideoFootageController.create);
router.get('/video-footage/fetchall', videoFootage_controller_1.VideoFootageController.reveal);
router.get('/video-footage/fetchone/:ticket', videoFootage_controller_1.VideoFootageController.revealOne);
router.put('/video-footage/update/:ticket', videoFootage_controller_1.VideoFootageController.alter);
router.delete('/video-footage/delete/:ticket', videoFootage_controller_1.VideoFootageController.remove);
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////LogIn///////////////////////////////////////////////////////
router.post('/login-page', logins_controller_1.LoginController.authenticated);
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////Monitors////////////////////////////////////////////////////
router.delete('/monitors/delete', Monitors_controller_1.MonitorsController.remove);
router.post('/monitors/post', Monitors_controller_1.MonitorsController.create);
router.get('/monitors/fetchOne/:monitor', Monitors_controller_1.MonitorsController.fetchOne);
router.get('/monitors/fetchAll', Monitors_controller_1.MonitorsController.fetchAll);
exports.default = router;
